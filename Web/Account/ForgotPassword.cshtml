@* 如果你要使用绑定，请删除此部分 *@
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "忘记了密码";

    bool passwordSent = false;
    var resetToken = "";
    var email = Request.Form["email"] ?? Request.QueryString["email"];

    // 设置验证
    Validation.RequireField("email", "电子邮件地址字段是必填字段。");

    if (IsPost) {
        AntiForgery.Validate();
        // validate email
        bool isValid = true;
        if (Validation.IsValid()) {
            if (WebSecurity.GetUserId(email) > -1 && WebSecurity.IsConfirmed(email)) {
                resetToken = WebSecurity.GeneratePasswordResetToken(email); // 也可以为令牌指定到期日期
            } else {
                passwordSent = true; // 我们不希望透露该用户不存在。
                isValid = false;
            }
        }
        if (isValid) {
            var hostUrl = Request.Url.GetComponents(UriComponents.SchemeAndServer, UriFormat.Unescaped);
            var resetUrl = hostUrl + VirtualPathUtility.ToAbsolute("~/Account/PasswordReset?resetToken=" + HttpUtility.UrlEncode(resetToken));
            WebMail.Send(
                to: email,
                subject: "请重置你的密码", 
                body: "使用此密码重置令牌可重置你的密码。令牌为: " + resetToken + @"。请访问 <a href=""" + HttpUtility.HtmlAttributeEncode(resetUrl) + @""">" + resetUrl + "</a> 重置你的密码。"
            );
            passwordSent = true;
        }
    }
}

<hgroup class="title">
    <h1>@Page.Title.</h1>
    <h2>使用以下表单重置密码。</h2>
</hgroup>

@if (!WebMail.SmtpServer.IsEmpty()) {
    <p>
        我们会将密码重置说明发送到与你的帐户关联的电子邮件地址。
    </p>

    if (passwordSent) {
        <p class="message-success">
            重置密码说明已发送到指定的电子邮件地址。
        </p>
    }

    <form method="post">
        @AntiForgery.GetHtml()
        @Html.ValidationSummary(excludeFieldErrors: true)

        <fieldset>
            <legend>密码重置说明表单</legend>
            <ol>
                <li class="email">
                    <label for="email" @if (!ModelState.IsValidField("email")) {<text>class="error-label"</text>}>电子邮件地址</label>
                    <input type="text" id="email" name="email" value="@email" disabled="@passwordSent" @Validation.For("email") />
                    @Html.ValidationMessage("email")
                </li>
            </ol>
            <p class="form-actions">
                <input type="submit" value="发送说明" disabled="@passwordSent" />
            </p>
        </fieldset>
    </form>
} else {
   <p class="message-info">
       由于 SMTP 服务器的配置不正确，
       因此已对此网站禁用密码恢复。请与此站点的所有者联系以重置 
       密码。
   </p>
}